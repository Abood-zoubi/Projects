// <auto-generated />
using System;
using Biding_management_System.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biding_management_System.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250331063120_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biding_management_System.Domain.Entities.BidEvaluation", b =>
                {
                    b.Property<int>("BidEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidEvaluationId"));

                    b.Property<int>("BidingId")
                        .HasColumnType("int");

                    b.Property<decimal>("ComplianceScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExperienceScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalScore")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BidEvaluationId");

                    b.HasIndex("BidingId");

                    b.ToTable("BidEvaluations");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Bids.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidId"));

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BidderId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationBidEvaluationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("BidId");

                    b.HasIndex("EvaluationBidEvaluationId");

                    b.HasIndex("TenderId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Bids.BidDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentId");

                    b.HasIndex("BidId");

                    b.ToTable("BidDocuments");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Tender.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("TenderId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Tender.Tender", b =>
                {
                    b.Property<int>("TenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderId"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityCriteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TenderId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Tender.TenderCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.BidEvaluation", b =>
                {
                    b.HasOne("Biding_management_System.Domain.Entities.Bids.Bid", "Bid")
                        .WithMany()
                        .HasForeignKey("BidingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Bids.Bid", b =>
                {
                    b.HasOne("Biding_management_System.Domain.Entities.BidEvaluation", "Evaluation")
                        .WithMany()
                        .HasForeignKey("EvaluationBidEvaluationId");

                    b.HasOne("Biding_management_System.Domain.Entities.Tender.Tender", "Tender")
                        .WithMany("Bids")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evaluation");

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Bids.BidDocument", b =>
                {
                    b.HasOne("Biding_management_System.Domain.Entities.Bids.Bid", "Bid")
                        .WithMany("Documents")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Tender.Document", b =>
                {
                    b.HasOne("Biding_management_System.Domain.Entities.Tender.Tender", "Tender")
                        .WithMany("Documents")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Tender.Tender", b =>
                {
                    b.HasOne("Biding_management_System.Domain.Entities.Tender.TenderCategory", "Category")
                        .WithMany("Tenders")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Bids.Bid", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Tender.Tender", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Biding_management_System.Domain.Entities.Tender.TenderCategory", b =>
                {
                    b.Navigation("Tenders");
                });
#pragma warning restore 612, 618
        }
    }
}
